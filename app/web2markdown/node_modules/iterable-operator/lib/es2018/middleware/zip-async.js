"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.zipAsync = void 0;
const types_1 = require("@blackglory/types");
function zipAsync(iterable, ...otherIterables) {
    return zipWithSize(iterable, ...otherIterables);
}
exports.zipAsync = zipAsync;
async function* zipWithSize(...iterables) {
    const length = iterables.length;
    const iterators = iterables.map(iterable => {
        if (types_1.isAsyncIterable(iterable)) {
            return [Symbol.asyncIterator, iterable[Symbol.asyncIterator]()];
        }
        else {
            return [Symbol.iterator, iterable[Symbol.iterator]()];
        }
    });
    while (true) {
        const result = new Array(length);
        for (let i = 0; i < length; i++) {
            const [type, iterator] = iterators[i];
            let temp;
            if (type === Symbol.asyncIterator) {
                temp = await iterator.next();
            }
            else {
                temp = iterator.next();
            }
            if (temp.done)
                return;
            result[i] = temp.value;
        }
        yield result;
    }
}
//# sourceMappingURL=zip-async.js.map