"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.repeatAsync = exports.InvalidArgumentError = void 0;
const error_1 = require("../error");
Object.defineProperty(exports, "InvalidArgumentError", { enumerable: true, get: function () { return error_1.InvalidArgumentError; } });
function repeatAsync(iterable, times) {
    if (times < 0)
        throw new error_1.InvalidArgumentError('times', '>= 0');
    if (times === Infinity)
        warnInfiniteLoop();
    return (async function* () {
        const cache = [];
        if (times > 0) {
            for await (const element of iterable) {
                yield element;
                cache.push(element);
            }
            times--;
        }
        while (times > 0) {
            yield* cache;
            times--;
        }
    })();
}
exports.repeatAsync = repeatAsync;
function warnInfiniteLoop() {
    if (isProduction())
        return;
    console.warn('When iterable has no elements and times is Infinity, repeat() will be in dead loop');
}
function isProduction() {
    return process.env.NODE_ENV === 'production';
}
//# sourceMappingURL=repeat-async.js.map