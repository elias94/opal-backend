"use strict";
var __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, privateMap) {
    if (!privateMap.has(receiver)) {
        throw new TypeError("attempted to get private field on non-instance");
    }
    return privateMap.get(receiver);
};
var _map;
Object.defineProperty(exports, "__esModule", { value: true });
exports.HashSet = void 0;
class HashSet {
    constructor(hash) {
        this.hash = hash;
        _map.set(this, new Map());
    }
    add(value) {
        __classPrivateFieldGet(this, _map).set(this.hash(value), value);
        return this;
    }
    delete(value) {
        return __classPrivateFieldGet(this, _map).delete(this.hash(value));
    }
    has(value) {
        return __classPrivateFieldGet(this, _map).has(this.hash(value));
    }
    clear() {
        __classPrivateFieldGet(this, _map).clear();
    }
    values() {
        return __classPrivateFieldGet(this, _map).values();
    }
    get size() {
        return __classPrivateFieldGet(this, _map).size;
    }
    get [(_map = new WeakMap(), Symbol.toStringTag)]() {
        return this.constructor.name;
    }
    [Symbol.iterator]() {
        return __classPrivateFieldGet(this, _map).values();
    }
}
exports.HashSet = HashSet;
//# sourceMappingURL=hash-set.js.map