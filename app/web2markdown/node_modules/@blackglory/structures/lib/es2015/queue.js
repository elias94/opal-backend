"use strict";
var __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, privateMap) {
    if (!privateMap.has(receiver)) {
        throw new TypeError("attempted to get private field on non-instance");
    }
    return privateMap.get(receiver);
};
var _items;
Object.defineProperty(exports, "__esModule", { value: true });
exports.EmptyQueueError = exports.Queue = void 0;
const errors_1 = require("@blackglory/errors");
class Queue {
    constructor() {
        _items.set(this, []);
    }
    empty() {
        __classPrivateFieldGet(this, _items).length = 0;
    }
    enqueue(...items) {
        __classPrivateFieldGet(this, _items).push(...items);
    }
    dequeue() {
        if (this.size === 0)
            throw new EmptyQueueError();
        return __classPrivateFieldGet(this, _items).shift();
    }
    get size() {
        return __classPrivateFieldGet(this, _items).length;
    }
}
exports.Queue = Queue;
_items = new WeakMap();
class EmptyQueueError extends errors_1.CustomError {
    constructor() {
        super('Queue is empty.');
    }
}
exports.EmptyQueueError = EmptyQueueError;
//# sourceMappingURL=queue.js.map