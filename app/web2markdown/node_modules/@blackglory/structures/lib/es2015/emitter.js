"use strict";
var __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, privateMap) {
    if (!privateMap.has(receiver)) {
        throw new TypeError("attempted to get private field on non-instance");
    }
    return privateMap.get(receiver);
};
var _map;
Object.defineProperty(exports, "__esModule", { value: true });
exports.Emitter = void 0;
class Emitter {
    constructor() {
        _map.set(this, new Map());
    }
    on(event, handler) {
        if (!__classPrivateFieldGet(this, _map).has(event))
            __classPrivateFieldGet(this, _map).set(event, new Set());
        const set = __classPrivateFieldGet(this, _map).get(event);
        set.add(handler);
    }
    off(event, handler) {
        if (__classPrivateFieldGet(this, _map).has(event)) {
            const set = __classPrivateFieldGet(this, _map).get(event);
            set.delete(handler);
            if (set.size === 0)
                __classPrivateFieldGet(this, _map).delete(event);
        }
    }
    emit(event, value) {
        if (__classPrivateFieldGet(this, _map).has(event)) {
            const set = __classPrivateFieldGet(this, _map).get(event);
            set.forEach(cb => cb(value));
        }
    }
}
exports.Emitter = Emitter;
_map = new WeakMap();
//# sourceMappingURL=emitter.js.map