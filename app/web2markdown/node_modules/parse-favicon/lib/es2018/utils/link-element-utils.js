"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.getIcons = void 0;
require("core-js/es/string");
const query_1 = require("@blackglory/query");
const iterable_operator_1 = require("iterable-operator/lib/es2015/style/chaining/iterable-operator");
const parse_space_separated_sizes_1 = require("./parse-space-separated-sizes");
function getIcons(document, linkElementSelector, reference) {
    const nodes = query_1.query.call(document, query_1.css `${linkElementSelector}`);
    return new iterable_operator_1.IterableOperator(nodes)
        .filter(hasHref)
        .map(x => createIcon(reference, getHref(x), getType(x), getSize(x)))
        .toArray();
}
exports.getIcons = getIcons;
function getSize(element) {
    const sizes = element.getAttribute('sizes');
    if (sizes) {
        if (sizes === 'any')
            return 'any';
        const results = parse_space_separated_sizes_1.parseSpaceSeparatedSizes(sizes);
        if (results.length === 0)
            return null;
        if (results.length === 1)
            return results[0];
        return results;
    }
    return null;
}
function getHref(element) {
    return element.getAttribute('href') || null;
}
function getType(element) {
    return element.getAttribute('type') || null;
}
function hasHref(element) {
    return !!element.getAttribute('href');
}
function createIcon(reference, url, type, size) {
    return { reference, url, type, size };
}
//# sourceMappingURL=link-element-utils.js.map