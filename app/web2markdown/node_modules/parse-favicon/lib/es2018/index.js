"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.parseFavicon = void 0;
const return_style_1 = require("return-style");
const parse_apple_touch_icons_1 = require("./parse-apple-touch-icons");
const parse_fluid_icons_1 = require("./parse-fluid-icons");
const parse_icons_1 = require("./parse-icons");
const parse_ie_config_1 = require("./parse-ie-config");
const parse_ie11_tiles_1 = require("./parse-ie11-tiles");
const parse_manifest_1 = require("./parse-manifest");
const parse_mask_icons_1 = require("./parse-mask-icons");
const parse_shortcut_icons_1 = require("./parse-shortcut-icons");
const parse_windows8_tiles_1 = require("./parse-windows8-tiles");
const parse_image_1 = require("./parse-image");
const rxjs_1 = require("rxjs");
const immer_1 = require("./utils/immer");
function parseFavicon(url, textFetcher, bufferFetcher) {
    return new rxjs_1.Observable(observer => {
        parse(icon => observer.next(icon))
            .then(() => observer.complete())
            .catch(err => observer.error(err));
    });
    async function parse(publish) {
        const html = await textFetcher(url);
        const icons = [
            ...parse_apple_touch_icons_1.parseAppleTouchIcons(html),
            ...parse_fluid_icons_1.parseFluidIcons(html),
            ...parse_icons_1.parseIcons(html),
            ...parse_ie11_tiles_1.parseIE11Tiles(html),
            ...parse_mask_icons_1.parseMaskIcons(html),
            ...parse_shortcut_icons_1.parseShortcutIcons(html),
            ...parse_windows8_tiles_1.parseWindows8Tiles(html)
        ];
        if (bufferFetcher) {
            const imagePromisePool = new Map();
            icons.forEach(async (icon) => publish(await tryUpdateIcon(bufferFetcher, imagePromisePool, icon)));
            (await Promise.all([
                parse_ie_config_1.parseIEConfig(html, textFetcher),
                parse_manifest_1.parseManifest(html, textFetcher)
            ]))
                .flat()
                .forEach(async (icon) => publish(await tryUpdateIcon(bufferFetcher, imagePromisePool, icon)));
            getDefaultIconUrls().forEach(async (url) => {
                if (!imagePromisePool.has(url))
                    imagePromisePool.set(url, fetchImage(bufferFetcher, url));
                const image = await imagePromisePool.get(url);
                if (image) {
                    publish({
                        url,
                        reference: url,
                        type: image.type,
                        size: image.size
                    });
                }
            });
            await Promise.all(imagePromisePool.values());
        }
        else {
            icons.forEach(publish);
            (await Promise.all([
                parse_ie_config_1.parseIEConfig(html, textFetcher),
                parse_manifest_1.parseManifest(html, textFetcher)
            ]))
                .flat()
                .forEach(publish);
        }
    }
    async function tryUpdateIcon(bufferFetcher, imagePromisePool, icon) {
        if (!imagePromisePool.has(icon.url))
            imagePromisePool.set(icon.url, fetchImage(bufferFetcher, icon.url));
        const image = await imagePromisePool.get(icon.url);
        if (image) {
            return updateIcon(icon, image);
        }
        else {
            return icon;
        }
    }
    async function fetchImage(bufferFetcher, url) {
        const arrayBuffer = await return_style_1.getResultAsync(() => bufferFetcher(url));
        if (!arrayBuffer)
            return null;
        const buffer = Buffer.from(arrayBuffer);
        try {
            return await parse_image_1.parseImage(buffer);
        }
        catch (_a) {
            return null;
        }
    }
    function updateIcon(icon, image) {
        return immer_1.produce(icon, icon => {
            icon.type = image.type;
            icon.size = image.size;
        });
    }
}
exports.parseFavicon = parseFavicon;
function getDefaultIconUrls() {
    return [
        '/favicon.ico',
        '/apple-touch-icon-57x57-precomposed.png',
        '/apple-touch-icon-57x57.png',
        '/apple-touch-icon-72x72-precomposed.png',
        '/apple-touch-icon-72x72.png',
        '/apple-touch-icon-114x114-precomposed.png',
        '/apple-touch-icon-114x114.png',
        '/apple-touch-icon-120x120-precomposed.png',
        '/apple-touch-icon-120x120.png',
        '/apple-touch-icon-144x144-precomposed.png',
        '/apple-touch-icon-144x144.png',
        '/apple-touch-icon-152x152-precomposed.png',
        '/apple-touch-icon-152x152.png',
        '/apple-touch-icon-180x180-precomposed.png',
        '/apple-touch-icon-180x180.png',
        '/apple-touch-icon-precomposed.png',
        '/apple-touch-icon.png'
    ];
}
//# sourceMappingURL=index.js.map