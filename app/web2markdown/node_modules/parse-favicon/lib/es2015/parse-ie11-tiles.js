"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.parseIE11Tiles = void 0;
const query_1 = require("@blackglory/query");
const iterable_operator_1 = require("iterable-operator/lib/es2015/style/chaining/iterable-operator");
const parse_html_1 = require("./utils/parse-html");
const elements_to_attributes_1 = require("./utils/elements-to-attributes");
function parseIE11Tiles(html) {
    const document = parse_html_1.parseHTML(html);
    return [
        ...getIcons(document, 'meta[name="msapplication-square70x70logo"]', 'msapplication-square70x70logo', { width: 70, height: 70 }),
        ...getIcons(document, 'meta[name="msapplication-square150x150logo"]', 'msapplication-square150x150logo', { width: 150, height: 150 }),
        ...getIcons(document, 'meta[name="msapplication-wide310x150logo"]', 'msapplication-wide310x150logo', { width: 310, height: 150 }),
        ...getIcons(document, 'meta[name="msapplication-square310x310logo"]', 'msapplication-square310x310logo', { width: 310, height: 310 })
    ];
}
exports.parseIE11Tiles = parseIE11Tiles;
function getIcons(document, selector, reference, size) {
    const nodes = query_1.query.call(document, query_1.css `${selector}`);
    return new iterable_operator_1.IterableOperator(nodes)
        .transform(elements_to_attributes_1.elementsToAttributes('content'))
        .map(url => createIcon(reference, url, size))
        .toArray();
    function createIcon(reference, url, size) {
        return {
            reference,
            url,
            type: null,
            size
        };
    }
}
//# sourceMappingURL=parse-ie11-tiles.js.map