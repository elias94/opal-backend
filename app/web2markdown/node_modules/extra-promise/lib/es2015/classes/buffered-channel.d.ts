import { SignalGroup } from './signal-group';
import { Queue } from '@blackglory/structures';
import { ChannelClosedError } from '../shared/error';
import { IBlockingChannel } from '../shared/types';
export declare class BufferedChannel<T> implements IBlockingChannel<T> {
    private bufferSize;
    isClosed: boolean;
    enqueueSingalGroup: SignalGroup;
    dequeueSignalGroup: SignalGroup;
    buffer: Queue<T>;
    constructor(bufferSize: number);
    send(value: T): Promise<void>;
    receive(): AsyncIterable<T>;
    close(): void;
}
export { ChannelClosedError };
