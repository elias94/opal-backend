import { SignalGroup } from './signal-group';
import { Mutex } from './mutex';
import { IBlockingChannel } from '../shared/types';
export declare class Channel<T> implements IBlockingChannel<T> {
    isClosed: boolean;
    writeLock: Mutex;
    writeSignalGroup: SignalGroup;
    readSignalGroup: SignalGroup;
    box: T[];
    send(value: T): Promise<void>;
    receive(): AsyncIterable<T>;
    close(): void;
}
export { ChannelClosedError } from '../shared/error';
