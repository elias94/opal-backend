import { CustomError } from '@blackglory/errors';
import { InvalidArgumentError, InvalidArgumentsLengthError } from '../shared/error';
export { InvalidArgumentError, InvalidArgumentsLengthError };
declare type ResultCallback<T> = (err: null, result: T) => void;
declare type ErrorCallback = (err: any) => void;
declare type Callback<T> = ErrorCallback & ResultCallback<T>;
export declare function callbackify<Result, T1>(fn: (arg1: T1) => Promise<Result>): (arg1: T1, callback: Callback<Result>) => void;
export declare function callbackify<Result, T1, T2>(fn: (arg1: T1) => Promise<Result>): (arg1: T1, callback: Callback<Result>) => void;
export declare function callbackify<Result, T1, T2>(fn: (arg1: T1, args2: T2) => Promise<Result>): (arg1: T1, args2: T2, callback: Callback<Result>) => void;
export declare function callbackify<Result, T1, T2, T3>(fn: (arg1: T1, args2: T2, args3: T3) => Promise<Result>): (arg1: T1, args2: T2, args3: T3, callback: Callback<Result>) => void;
export declare function callbackify<Result, T1, T2, T3, T4>(fn: (arg1: T1, args2: T2, args3: T3, args4: T4) => Promise<Result>): (arg1: T1, args2: T2, args3: T3, args4: T4, callback: Callback<Result>) => void;
export declare function callbackify<Result, T1, T2, T3, T4, T5>(fn: (arg1: T1, args2: T2, args3: T3, args4: T4, args5: T5) => Promise<Result>): (arg1: T1, args2: T2, args3: T3, args4: T4, args5: T5, callback: Callback<Result>) => void;
export declare function callbackify<Result, T1, T2, T3, T4, T5, T6>(fn: (arg1: T1, args2: T2, args3: T3, args4: T4, args5: T5, args6: T6) => Promise<Result>): (arg1: T1, args2: T2, args3: T3, args4: T4, args5: T5, args6: T6, callback: Callback<Result>) => void;
export declare function callbackify<Result, T1, T2, T3, T4, T5, T6, T7>(fn: (arg1: T1, args2: T2, args3: T3, args4: T4, args5: T5, args6: T6, args7: T7) => Promise<Result>): (arg1: T1, args2: T2, args3: T3, args4: T4, args5: T5, args6: T6, args7: T7, callback: Callback<Result>) => void;
export declare function callbackify<Result, Args extends any[] = unknown[]>(fn: (...args: Args) => PromiseLike<Result>): (...args: Args) => void;
export declare class FalsyError extends CustomError {
    reason: any;
    constructor(val: any);
}
