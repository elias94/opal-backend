"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.FalsyError = exports.callbackify = exports.InvalidArgumentsLengthError = exports.InvalidArgumentError = void 0;
const types_1 = require("@blackglory/types");
const errors_1 = require("@blackglory/errors");
const _error_1 = require("../shared/error");
Object.defineProperty(exports, "InvalidArgumentError", { enumerable: true, get: function () { return _error_1.InvalidArgumentError; } });
Object.defineProperty(exports, "InvalidArgumentsLengthError", { enumerable: true, get: function () { return _error_1.InvalidArgumentsLengthError; } });
function callbackify(fn) {
    return function (...args) {
        if (args.length === 0)
            throw new _error_1.InvalidArgumentsLengthError('a callbackfied function', 1, 0);
        const [realArgs, cb] = sep(args);
        if (types_1.isntFunction(cb))
            throw new _error_1.InvalidArgumentError('callback', 'a function');
        fn(...realArgs).then(result => cb(null, result), err => cb(err || new FalsyError(err)));
    };
    function sep(args) {
        const realArgs = args.slice(0, -1);
        const cb = args[args.length - 1];
        return [realArgs, cb];
    }
}
exports.callbackify = callbackify;
class FalsyError extends errors_1.CustomError {
    constructor(val) {
        super();
        this.reason = val;
    }
}
exports.FalsyError = FalsyError;
//# sourceMappingURL=callbackify.js.map