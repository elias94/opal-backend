declare type Asyncify<T> = T extends PromiseLike<unknown> ? T : T | PromiseLike<T>;
declare type Promisify<T> = {
    [P in keyof T]: Asyncify<T[P]>;
};
export declare function asyncify<T extends any[], U>(fn: (...args: T) => U | PromiseLike<U>): (...args: Promisify<T>) => Promise<U>;
export {};
