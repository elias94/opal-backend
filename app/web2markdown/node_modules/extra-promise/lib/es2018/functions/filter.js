"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.InvalidArgumentError = exports.filter = void 0;
const each_1 = require("./each");
const check_concurrency_1 = require("../shared/check-concurrency");
Object.defineProperty(exports, "InvalidArgumentError", { enumerable: true, get: function () { return check_concurrency_1.InvalidArgumentError; } });
function filter(iterable, fn, concurrency = Infinity) {
    check_concurrency_1.checkConcurrency('concurrency', concurrency);
    return (async () => {
        const results = [];
        await each_1.each(iterable, async (x, i) => {
            if (await fn(x, i))
                results[i] = x;
        }, concurrency);
        return Object.values(results);
    })();
}
exports.filter = filter;
//# sourceMappingURL=filter.js.map