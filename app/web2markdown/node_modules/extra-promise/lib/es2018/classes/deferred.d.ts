export declare class Deferred<T> implements PromiseLike<T> {
    #private;
    constructor();
    get then(): <TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | null | undefined, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | null | undefined) => Promise<TResult1 | TResult2>;
    resolve(value: T): void;
    reject(reason: unknown): void;
}
