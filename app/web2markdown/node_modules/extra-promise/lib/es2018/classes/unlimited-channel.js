"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.ChannelClosedError = exports.UnlimitedChannel = void 0;
const return_style_1 = require("return-style");
const signal_1 = require("./signal");
const signal_group_1 = require("./signal-group");
const structures_1 = require("@blackglory/structures");
const _error_1 = require("../shared/error");
class UnlimitedChannel {
    constructor() {
        this.isClosed = false;
        this.enqueueSignalGroup = new signal_group_1.SignalGroup();
        this.buffer = new structures_1.Queue();
    }
    send(value) {
        if (this.isClosed)
            throw new _error_1.ChannelClosedError();
        this.buffer.enqueue(value);
        this.enqueueSignalGroup.emitAll();
    }
    receive() {
        return {
            [Symbol.asyncIterator]: () => {
                return {
                    next: async () => {
                        while (this.buffer.size === 0) {
                            if (this.isClosed)
                                return { done: true, value: undefined };
                            const enqueueSignal = new signal_1.Signal();
                            this.enqueueSignalGroup.add(enqueueSignal);
                            try {
                                if (await return_style_1.isFailurePromise(enqueueSignal))
                                    return { done: true, value: undefined };
                            }
                            finally {
                                this.enqueueSignalGroup.remove(enqueueSignal);
                            }
                        }
                        const value = this.buffer.dequeue();
                        return { done: false, value };
                    }
                };
            }
        };
    }
    close() {
        if (!this.isClosed) {
            this.isClosed = true;
            this.enqueueSignalGroup.discardAll();
        }
    }
}
exports.UnlimitedChannel = UnlimitedChannel;
var _error_2 = require("../shared/error");
Object.defineProperty(exports, "ChannelClosedError", { enumerable: true, get: function () { return _error_2.ChannelClosedError; } });
//# sourceMappingURL=unlimited-channel.js.map